{"version":3,"sources":["webpack://ngxBr/webpack/universalModuleDefinition","webpack://ngxBr/webpack/bootstrap","webpack://ngxBr/external {\"root\":[\"ng\",\"core\"],\"commonjs\":\"@angular/core\",\"commonjs2\":\"@angular/core\",\"amd\":\"@angular/core\"}","webpack://ngxBr/./src/currency-mask.directive.ts","webpack://ngxBr/external {\"root\":[\"ng\",\"forms\"],\"commonjs\":\"@angular/forms\",\"commonjs2\":\"@angular/forms\",\"amd\":\"@angular/forms\"}","webpack://ngxBr/./src/currency-mask.config.ts","webpack://ngxBr/./index.ts","webpack://ngxBr/./src/input.handler.ts","webpack://ngxBr/./src/input.service.ts","webpack://ngxBr/./src/input.manager.ts","webpack://ngxBr/./src/currency-mask.module.ts","webpack://ngxBr/external {\"root\":[\"ng\",\"common\"],\"commonjs\":\"@angular/common\",\"commonjs2\":\"@angular/common\",\"amd\":\"@angular/common\"}"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__9__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","CurrencyMaskDirective","multi","currencyMaskConfig","elementRef","keyValueDiffers","options","optionsTemplate","align","allowNegative","allowZero","decimal","precision","prefix","suffix","thousands","nullable","this","keyValueDiffer","find","ngAfterViewInit","nativeElement","style","textAlign","ngDoCheck","diff","inputHandler","updateOptions","assign","ngOnInit","InputHandler","handleBlur","event","getOnModelTouched","apply","handleCut","isChromeAndroid","handleInput","handleKeydown","handleKeypress","handlePaste","test","navigator","userAgent","registerOnChange","callbackFunction","setOnModelChange","registerOnTouched","setOnModelTouched","setDisabledState","disabled","writeValue","setValue","Input","HostListener","Directive","selector","providers","Optional","Inject","CURRENCY_MASK_CONFIG","ElementRef","KeyValueDiffers","InjectionToken","htmlInputElement","inputService","InputService","setTimeout","updateFieldValue","onModelChange","keyCode","rawValue","charCodeAt","length","rawValueLength","rawValueSelectionEnd","inputSelection","selectionEnd","storedRawValueLength","storedRawValue","Math","abs","removeNumber","changeToPositive","changeToNegative","canInputMoreNumbers","addNumber","setCursorPosition","which","charCode","preventDefault","selectionRangeLength","selectionStart","prefixLength","clearValue","isNullable","ctrlKey","undefined","getOnModelChange","onModelTouched","target","setSelectionRange","PER_AR_NUMBER","Map","inputManager","InputManager","initialize","set","applyMask","keyChar","String","fromCharCode","substring","isNumber","onlyNumbers","Number","toFixed","replace","integerPart","slice","startsWith","newRawValue","decimalPart","isZero","parseInt","indexOf","clearMask","RegExp","forEach","val","re","parseFloat","charAt","move","substr","match","updateValueAndCursor","setCursorAt","position","focus","createTextRange","textRange","collapse","moveEnd","moveStart","select","oldLength","haventReachedMaxLength","maxLength","haveNumberSelected","startWithZero","range","document","selection","createRange","parentElement","lenght","normalizedValue","startRange","moveToBookmark","getBookmark","endRange","compareEndPoints","split","_storedRawValue","NgxCurrencyModule","forRoot","config","ngModule","useValue","NgModule","imports","CommonModule","FormsModule","declarations"],"mappings":"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","file":"ngx-currency.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ngxBr\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"ngxBr\"] = factory(root[\"ng\"][\"core\"], root[\"ng\"][\"forms\"], root[\"ng\"][\"common\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__9__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  DoCheck,\r\n  ElementRef,\r\n  forwardRef,\r\n  HostListener,\r\n  Inject,\r\n  KeyValueDiffer,\r\n  KeyValueDiffers,\r\n  Input,\r\n  OnInit,\r\n  Optional\r\n} from \"@angular/core\";\r\n\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\r\nimport {CurrencyMaskConfig, CURRENCY_MASK_CONFIG} from \"./currency-mask.config\";\r\nimport {InputHandler} from \"./input.handler\";\r\n\r\nexport const CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => CurrencyMaskDirective),\r\n  multi: true,\r\n};\r\n\r\n@Directive({\r\n    selector: \"[currencyMask]\",\r\n    providers: [CURRENCYMASKDIRECTIVE_VALUE_ACCESSOR]\r\n})\r\nexport class CurrencyMaskDirective implements AfterViewInit, ControlValueAccessor, DoCheck, OnInit {\r\n\r\n  @Input() options: Partial<CurrencyMaskConfig> = {};\r\n\r\n  public inputHandler: InputHandler;\r\n  public keyValueDiffer: KeyValueDiffer<any, any>;\r\n\r\n  public optionsTemplate = {\r\n      align: \"right\",\r\n      allowNegative: true,\r\n      allowZero: true,\r\n      decimal: \".\",\r\n      precision: 2,\r\n      prefix: \"$ \",\r\n      suffix: \"\",\r\n      thousands: \",\",\r\n      nullable: false\r\n  };\r\n\r\n  constructor(@Optional() @Inject(CURRENCY_MASK_CONFIG) private currencyMaskConfig: CurrencyMaskConfig,\r\n                                                        private elementRef: ElementRef,\r\n                                                        private keyValueDiffers: KeyValueDiffers) {\r\n    if (currencyMaskConfig) {\r\n        this.optionsTemplate = currencyMaskConfig;\r\n    }\r\n\r\n    this.keyValueDiffer = keyValueDiffers.find({}).create();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.elementRef.nativeElement.style.textAlign = this.options ? this.options.align : this.optionsTemplate.align;\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.keyValueDiffer.diff(this.options)) {\r\n      this.elementRef.nativeElement.style.textAlign = this.options.align ? this.options.align : this.optionsTemplate.align;\r\n      this.inputHandler.updateOptions((<any>Object).assign({}, this.optionsTemplate, this.options));\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputHandler = new InputHandler(this.elementRef.nativeElement, (<any>Object).assign({}, this.optionsTemplate, this.options));\r\n  }\r\n\r\n  @HostListener(\"blur\", [\"$event\"])\r\n  handleBlur(event: any) {\r\n    this.inputHandler.getOnModelTouched().apply(event);\r\n  }\r\n\r\n  @HostListener(\"cut\", [\"$event\"])\r\n  handleCut(event: any) {\r\n    if (!this.isChromeAndroid()) {\r\n      this.inputHandler.handleCut(event);\r\n    }\r\n  }\r\n\r\n  @HostListener(\"input\", [\"$event\"])\r\n  handleInput(event: any) {\r\n    if (this.isChromeAndroid()) {\r\n      this.inputHandler.handleInput(event);\r\n    }\r\n  }\r\n\r\n  @HostListener(\"keydown\", [\"$event\"])\r\n  handleKeydown(event: any) {\r\n    if (!this.isChromeAndroid()) {\r\n      this.inputHandler.handleKeydown(event);\r\n    }\r\n  }\r\n\r\n  @HostListener(\"keypress\", [\"$event\"])\r\n  handleKeypress(event: any) {\r\n    if (!this.isChromeAndroid()) {\r\n      this.inputHandler.handleKeypress(event);\r\n    }\r\n  }\r\n\r\n  @HostListener(\"paste\", [\"$event\"])\r\n  handlePaste(event: any) {\r\n    if (!this.isChromeAndroid()) {\r\n      this.inputHandler.handlePaste(event);\r\n    }\r\n  }\r\n\r\n  isChromeAndroid(): boolean {\r\n    return /chrome/i.test(navigator.userAgent) && /android/i.test(navigator.userAgent);\r\n  }\r\n\r\n  registerOnChange(callbackFunction: Function): void {\r\n    this.inputHandler.setOnModelChange(callbackFunction);\r\n  }\r\n\r\n  registerOnTouched(callbackFunction: Function): void {\r\n    this.inputHandler.setOnModelTouched(callbackFunction);\r\n  }\r\n\r\n  setDisabledState(value: boolean): void {\r\n    this.elementRef.nativeElement.disabled = value;\r\n  }\r\n\r\n  writeValue(value: number): void {\r\n    this.inputHandler.setValue(value);\r\n  }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import {InjectionToken} from \"@angular/core\";\r\n\r\nexport interface CurrencyMaskConfig {\r\n  align: string;\r\n  allowNegative: boolean;\r\n  allowZero: boolean;\r\n  decimal: string;\r\n  precision: number;\r\n  prefix: string;\r\n  suffix: string;\r\n  thousands: string;\r\n  nullable: boolean;\r\n}\r\n\r\nexport let CURRENCY_MASK_CONFIG = new InjectionToken<CurrencyMaskConfig>(\"currency.mask.config\");\r\n","export * from './src/currency-mask.directive';\r\nexport * from './src/currency-mask.module';\r\nexport { CurrencyMaskConfig } from './src/currency-mask.config';\r\n","import {InputService} from \"./input.service\";\r\n\r\nexport class InputHandler {\r\n\r\n    private inputService: InputService;\r\n    private onModelChange: Function;\r\n    private onModelTouched: Function;\r\n\r\n    constructor(htmlInputElement: HTMLInputElement, options: any) {\r\n        this.inputService = new InputService(htmlInputElement, options);\r\n    }\r\n\r\n    handleCut(event: any): void {\r\n        setTimeout(() => {\r\n            this.inputService.updateFieldValue();\r\n            this.setValue(this.inputService.value);\r\n            this.onModelChange(this.inputService.value);\r\n        }, 0);\r\n    }\r\n\r\n    handleInput(event: any): void {\r\n        let keyCode = this.inputService.rawValue.charCodeAt(this.inputService.rawValue.length - 1);\r\n        let rawValueLength = this.inputService.rawValue.length;\r\n        let rawValueSelectionEnd = this.inputService.inputSelection.selectionEnd;\r\n        let storedRawValueLength = this.inputService.storedRawValue.length;\r\n        this.inputService.rawValue = this.inputService.storedRawValue;\r\n\r\n        if (rawValueLength != rawValueSelectionEnd || Math.abs(rawValueLength - storedRawValueLength) != 1) {\r\n            this.setCursorPosition(event);\r\n            return;\r\n        }\r\n\r\n        if (rawValueLength < storedRawValueLength) {\r\n            this.inputService.removeNumber(8);\r\n        }\r\n\r\n        if (rawValueLength > storedRawValueLength) {\r\n            switch (keyCode) {\r\n                case 43:\r\n                    this.inputService.changeToPositive();\r\n                    break;\r\n                case 45:\r\n                    this.inputService.changeToNegative();\r\n                    break;\r\n                default:\r\n                    if (!this.inputService.canInputMoreNumbers) {\r\n                        return;\r\n                    }\r\n\r\n                    this.inputService.addNumber(keyCode);\r\n            }\r\n        }\r\n\r\n        this.setCursorPosition(event);\r\n        this.onModelChange(this.inputService.value);\r\n    }\r\n\r\n    handleKeydown(event: any): void {\r\n        let keyCode = event.which || event.charCode || event.keyCode;\r\n\r\n        if (keyCode == 8 || keyCode == 46 || keyCode == 63272) {\r\n            event.preventDefault();\r\n            let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\r\n\r\n            if (selectionRangeLength == 0) {\r\n                this.inputService.removeNumber(keyCode);\r\n                this.onModelChange(this.inputService.value);\r\n            }\r\n\r\n            if (selectionRangeLength >= (this.inputService.rawValue.length - this.inputService.prefixLength())) {\r\n                this.clearValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    clearValue() {\r\n        this.setValue(this.inputService.isNullable() ? null : 0);\r\n        this.onModelChange(this.inputService.value);\r\n    }\r\n\r\n    handleKeypress(event: any): void {\r\n        let keyCode = event.which || event.charCode || event.keyCode;\r\n\r\n        if (keyCode === 97 && event.ctrlKey) {\r\n            return;\r\n        }\r\n\r\n        switch (keyCode) {\r\n            case undefined:\r\n            case 9:\r\n            case 13:\r\n            case 37:\r\n            case 39:\r\n                return;\r\n            case 43:\r\n                this.inputService.changeToPositive();\r\n                break;\r\n            case 45:\r\n                this.inputService.changeToNegative();\r\n                break;\r\n            default:\r\n                if (this.inputService.canInputMoreNumbers) {\r\n                    let selectionRangeLength = Math.abs(this.inputService.inputSelection.selectionEnd - this.inputService.inputSelection.selectionStart);\r\n\r\n                    if (selectionRangeLength == this.inputService.rawValue.length) {\r\n                        this.setValue(0);\r\n                    }\r\n\r\n                    this.inputService.addNumber(keyCode);\r\n                }\r\n        }\r\n\r\n        event.preventDefault();\r\n        this.onModelChange(this.inputService.value);\r\n    }\r\n\r\n    handlePaste(event: any): void {\r\n        setTimeout(() => {\r\n            this.inputService.updateFieldValue();\r\n            this.setValue(this.inputService.value);\r\n            this.onModelChange(this.inputService.value);\r\n        }, 1);\r\n    }\r\n\r\n    updateOptions(options: any): void {\r\n        this.inputService.updateOptions(options);\r\n    }\r\n\r\n    getOnModelChange(): Function {\r\n        return this.onModelChange;\r\n    }\r\n\r\n    setOnModelChange(callbackFunction: Function): void {\r\n        this.onModelChange = callbackFunction;\r\n    }\r\n\r\n    getOnModelTouched(): Function {\r\n        return this.onModelTouched;\r\n    }\r\n\r\n    setOnModelTouched(callbackFunction: Function) {\r\n        this.onModelTouched = callbackFunction;\r\n    }\r\n\r\n    setValue(value: number): void {\r\n        this.inputService.value = value;\r\n    }\r\n\r\n    private setCursorPosition(event: any): void {\r\n        setTimeout(function () {\r\n            event.target.setSelectionRange(event.target.value.length, event.target.value.length);\r\n        }, 0);\r\n    }\r\n}\r\n","import {InputManager} from \"./input.manager\";\r\nimport {CurrencyMaskConfig} from \"./currency-mask.config\";\r\n\r\n\r\nexport class InputService {\r\n    PER_AR_NUMBER: Map<string, string> = new Map<string, string>();\r\n\r\n    initialize() {\r\n        this.PER_AR_NUMBER.set(\"\\u06F0\", \"0\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F1\", \"1\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F2\", \"2\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F3\", \"3\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F4\", \"4\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F5\", \"5\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F6\", \"6\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F7\", \"7\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F8\", \"8\");\r\n        this.PER_AR_NUMBER.set(\"\\u06F9\", \"9\");\r\n\r\n        this.PER_AR_NUMBER.set(\"\\u0660\", \"0\");\r\n        this.PER_AR_NUMBER.set(\"\\u0661\", \"1\");\r\n        this.PER_AR_NUMBER.set(\"\\u0662\", \"2\");\r\n        this.PER_AR_NUMBER.set(\"\\u0663\", \"3\");\r\n        this.PER_AR_NUMBER.set(\"\\u0664\", \"4\");\r\n        this.PER_AR_NUMBER.set(\"\\u0665\", \"5\");\r\n        this.PER_AR_NUMBER.set(\"\\u0666\", \"6\");\r\n        this.PER_AR_NUMBER.set(\"\\u0667\", \"7\");\r\n        this.PER_AR_NUMBER.set(\"\\u0668\", \"8\");\r\n        this.PER_AR_NUMBER.set(\"\\u0669\", \"9\");\r\n    }\r\n\r\n    inputManager: InputManager;\r\n\r\n    constructor(private htmlInputElement: any, private options: CurrencyMaskConfig) {\r\n        this.inputManager = new InputManager(htmlInputElement);\r\n        this.initialize()\r\n    }\r\n\r\n    addNumber(keyCode: number): void {\r\n        if (!this.rawValue) {\r\n            this.rawValue = this.applyMask(false, \"0\");\r\n        }\r\n\r\n        let keyChar = String.fromCharCode(keyCode);\r\n        let selectionStart = this.inputSelection.selectionStart;\r\n        let selectionEnd = this.inputSelection.selectionEnd;\r\n        this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);\r\n        this.updateFieldValue(selectionStart + 1);\r\n    }\r\n\r\n    applyMask(isNumber: boolean, rawValue: string): string {\r\n        let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;\r\n        rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\r\n        let onlyNumbers = rawValue.replace(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/g, \"\");\r\n\r\n        if (!onlyNumbers) {\r\n            return \"\";\r\n        }\r\n\r\n        let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision)\r\n          .replace(/^\\u0660*/g, \"\")\r\n          .replace(/^\\u06F0*/g, \"\")\r\n          .replace(/^0*/g, \"\")\r\n          .replace(/\\B(?=([0-9\\u0660-\\u0669\\u06F0-\\u06F9]{3})+(?![0-9\\u0660-\\u0669\\u06F0-\\u06F9]))/g, thousands);\r\n\r\n        if (thousands && integerPart.startsWith(thousands)) {\r\n            integerPart = integerPart.substring(1);\r\n        }\r\n\r\n\r\n        if (integerPart == \"\") {\r\n            integerPart = \"0\";\r\n        }\r\n\r\n        let newRawValue = integerPart;\r\n        let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\r\n\r\n        if (precision > 0) {\r\n            newRawValue += decimal + decimalPart;\r\n        }\r\n\r\n        let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == \"\");\r\n        let operator = (rawValue.indexOf(\"-\") > -1 && allowNegative && !isZero) ? \"-\" : \"\";\r\n        return operator + prefix + newRawValue + suffix;\r\n    }\r\n\r\n    clearMask(rawValue: string): number {\r\n        if (this.isNullable() && rawValue === \"\")\r\n            return null;\r\n\r\n        let value = (rawValue || \"0\").replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\r\n\r\n        if (this.options.thousands) {\r\n            value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\r\n        }\r\n\r\n        if (this.options.decimal) {\r\n            value = value.replace(this.options.decimal, \".\");\r\n        }\r\n\r\n        this.PER_AR_NUMBER.forEach((val: string, key: string) => {\r\n            const re = new RegExp(key, \"g\");\r\n            value = value.replace(re, val);\r\n        });\r\n        return parseFloat(value);\r\n    }\r\n\r\n    changeToNegative(): void {\r\n        if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\r\n            this.rawValue = \"-\" + this.rawValue;\r\n        }\r\n    }\r\n\r\n    changeToPositive(): void {\r\n        this.rawValue = this.rawValue.replace(\"-\", \"\");\r\n    }\r\n\r\n    removeNumber(keyCode: number): void {\r\n        if (this.isNullable() && this.value == 0) {\r\n            this.rawValue = null;\r\n            return;\r\n        }\r\n\r\n        let selectionEnd = this.inputSelection.selectionEnd;\r\n        let selectionStart = this.inputSelection.selectionStart;\r\n\r\n        if (selectionStart > this.rawValue.length - this.options.suffix.length) {\r\n            selectionEnd = this.rawValue.length - this.options.suffix.length;\r\n            selectionStart = this.rawValue.length - this.options.suffix.length;\r\n        }\r\n\r\n    let move = this.rawValue.substr(selectionStart - 1, 1).match(/\\d/) ? 0 : -1;\r\n    if ((\r\n          keyCode == 8 &&\r\n          selectionStart - 1 === 0 &&\r\n          !(this.rawValue.substr(selectionStart, 1).match(/\\d/))\r\n        ) ||\r\n        (\r\n          (keyCode == 46 || keyCode == 63272) &&\r\n          selectionStart === 0 &&\r\n          !(this.rawValue.substr(selectionStart + 1, 1).match(/\\d/))\r\n        )\r\n    ) {\r\n      move = 1;\r\n    };\r\n    selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;\r\n    selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;\r\n    this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);\r\n    this.updateFieldValue(selectionStart + move);\r\n  }\r\n\r\n    updateFieldValue(selectionStart?: number): void {\r\n        let newRawValue = this.applyMask(false, this.rawValue || \"\");\r\n        selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\r\n        this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\r\n    }\r\n\r\n    updateOptions(options: any): void {\r\n        let value: number = this.value;\r\n        this.options = options;\r\n        this.value = value;\r\n    }\r\n\r\n    prefixLength(): any {\r\n        return this.options.prefix.length;\r\n    }\r\n\r\n    isNullable() {\r\n        return this.options.nullable;\r\n    }\r\n\r\n    get canInputMoreNumbers(): boolean {\r\n        return this.inputManager.canInputMoreNumbers;\r\n    }\r\n\r\n    get inputSelection(): any {\r\n        return this.inputManager.inputSelection;\r\n    }\r\n\r\n    get rawValue(): string {\r\n        return this.inputManager.rawValue;\r\n    }\r\n\r\n    set rawValue(value: string) {\r\n        this.inputManager.rawValue = value;\r\n    }\r\n\r\n    get storedRawValue(): string {\r\n        return this.inputManager.storedRawValue;\r\n    }\r\n\r\n    get value(): number {\r\n        return this.clearMask(this.rawValue);\r\n    }\r\n\r\n    set value(value: number) {\r\n        this.rawValue = this.applyMask(true, \"\" + value);\r\n    }\r\n}\r\n","export class InputManager {\r\n\r\n    private _storedRawValue: string;\r\n\r\n    constructor(private htmlInputElement: any) {\r\n    }\r\n\r\n    setCursorAt(position: number): void {\r\n        if (this.htmlInputElement.setSelectionRange) {\r\n            this.htmlInputElement.focus();\r\n            this.htmlInputElement.setSelectionRange(position, position);\r\n        } else if (this.htmlInputElement.createTextRange) {\r\n            let textRange = this.htmlInputElement.createTextRange();\r\n            textRange.collapse(true);\r\n            textRange.moveEnd(\"character\", position);\r\n            textRange.moveStart(\"character\", position);\r\n            textRange.select();\r\n        }\r\n    }\r\n\r\n    updateValueAndCursor(newRawValue: string, oldLength: number, selectionStart: number): void {\r\n        this.rawValue = newRawValue;\r\n        let newLength = newRawValue.length;\r\n        selectionStart = selectionStart - (oldLength - newLength);\r\n        this.setCursorAt(selectionStart);\r\n    }\r\n\r\n    get canInputMoreNumbers(): boolean {\r\n        let haventReachedMaxLength = !(this.rawValue.length >= this.htmlInputElement.maxLength && this.htmlInputElement.maxLength >= 0);\r\n        let selectionStart = this.inputSelection.selectionStart;\r\n        let selectionEnd = this.inputSelection.selectionEnd;\r\n        let haveNumberSelected = !!(selectionStart != selectionEnd &&\r\n                                    this.htmlInputElement.value.substring(selectionStart, selectionEnd).match(/[^0-9\\u0660-\\u0669\\u06F0-\\u06F9]/));\r\n        let startWithZero = (this.htmlInputElement.value.substring(0, 1) == \"0\");\r\n        return haventReachedMaxLength || haveNumberSelected || startWithZero;\r\n    }\r\n\r\n    get inputSelection(): any {\r\n        let selectionStart = 0;\r\n        let selectionEnd = 0;\r\n\r\n        if (typeof this.htmlInputElement.selectionStart == \"number\" && typeof this.htmlInputElement.selectionEnd == \"number\") {\r\n            selectionStart = this.htmlInputElement.selectionStart;\r\n            selectionEnd = this.htmlInputElement.selectionEnd;\r\n        } else {\r\n            let range = (<any>document).selection.createRange();\r\n\r\n            if (range && range.parentElement() == this.htmlInputElement) {\r\n                let lenght = this.htmlInputElement.value.length;\r\n                let normalizedValue = this.htmlInputElement.value.replace(/\\r\\n/g, \"\\n\");\r\n                let startRange = this.htmlInputElement.createTextRange();\r\n                startRange.moveToBookmark(range.getBookmark());\r\n                let endRange = this.htmlInputElement.createTextRange();\r\n                endRange.collapse(false);\r\n\r\n                if (startRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\r\n                    selectionStart = selectionEnd = lenght;\r\n                } else {\r\n                    selectionStart = -startRange.moveStart(\"character\", -lenght);\r\n                    selectionStart += normalizedValue.slice(0, selectionStart).split(\"\\n\").length - 1;\r\n\r\n                    if (startRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\r\n                        selectionEnd = lenght;\r\n                    } else {\r\n                        selectionEnd = -startRange.moveEnd(\"character\", -lenght);\r\n                        selectionEnd += normalizedValue.slice(0, selectionEnd).split(\"\\n\").length - 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            selectionStart: selectionStart,\r\n            selectionEnd: selectionEnd\r\n        };\r\n    }\r\n\r\n    get rawValue(): string {\r\n        return this.htmlInputElement && this.htmlInputElement.value;\r\n    }\r\n\r\n    set rawValue(value: string) {\r\n        this._storedRawValue = value;\r\n\r\n        if (this.htmlInputElement) {\r\n            this.htmlInputElement.value = value;\r\n        }\r\n    }\r\n\r\n    get storedRawValue(): string {\r\n        return this._storedRawValue;\r\n    }\r\n}\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {CurrencyMaskDirective} from \"./currency-mask.directive\";\r\nimport {CURRENCY_MASK_CONFIG, CurrencyMaskConfig} from \"./currency-mask.config\";\r\n\r\n@NgModule({\r\n  imports: [ CommonModule, FormsModule ],\r\n  declarations: [ CurrencyMaskDirective ],\r\n  exports: [ CurrencyMaskDirective ]\r\n})\r\nexport class NgxCurrencyModule {\r\n  static forRoot(config: CurrencyMaskConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxCurrencyModule,\r\n      providers: [{\r\n        provide: CURRENCY_MASK_CONFIG,\r\n        useValue: config,\r\n      }]\r\n    }\r\n  }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;"],"sourceRoot":""}